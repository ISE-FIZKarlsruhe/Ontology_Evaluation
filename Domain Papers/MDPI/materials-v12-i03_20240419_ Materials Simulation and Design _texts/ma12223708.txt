A new hybrid intelligent model was developed for estimating the compressive strength (CS) of ground granulated blast furnace slag (GGBFS) concrete, and the synergistic benefits of the hybrid algorithm as compared with a single algorithm were verified. While using the collected 269 data from previous experimental studies, artificial neural network (ANN) models with three different learning algorithms namely back-propagation (BP), particle swarm optimization (PSO), and new hybrid PSO-BP algorithms, were constructed and the performance of the models was evaluated with regard to the prediction accuracy, efficiency, and stability through a threefold procedure. It was found that the PSO-BP neural network model was superior to the simple ANNs that were trained by a single algorithm and it is suitable for predicting the CS of GGBFS concrete.
Numerous researchers have attempted to enhance the sustainability of concrete by not only reducing the amount of carbon dioxide (CO
2
) generated from the production of the Portland cement, but also increasing the durability of concrete, which can benefit the environment through the conservation of resources and the reduction of waste [
1
]. One commonly used strategy is to utilize recycled aggregates and mineral admixtures, such as fly ash, ground granulated blast furnace slag (GGBFS), and silica fume as a partial replacement for cement or aggregate in concrete [
1
,
2
,
3
]. The use of such industrial by-products has been found to improve the mechanical properties and durability of concrete, reducing CO
2
 emissions, conserving energy, and mitigating the adverse environmental effects of concrete [
4
]. 
Blast furnace slag is a by-product that was obtained in the production of iron in a blast furnace. When the molten blast furnace slag is quenched with water and finely ground to a cement parcel size, it is transformed into GGBFS. GGBFS, as a latent hydraulic material, reacts with calcium hydroxide (Ca(OH)
2
) in the presence of water, forming calcium silicate hydrate (C-S-H), which is primarily responsible for the strength of cement-based materials [
5
,
6
]. Through this pozzolanic reaction, the use of GGBFS as a supplementary cementitious material might reduce the early strength, but it increases the ultimate strength and significantly improves the microstructure and durability of hardened concrete [
7
,
8
,
9
]. 
Several empirical equations and mathematical models have been developed for estimating the compressive strength (CS) and other properties to minimize the experimental task that is required for concrete mix design [
10
,
11
,
12
]. These equations are generally in regression form based on the results of a series of experiments. However, selecting a suitable regression equation (linear, nonlinear, exponential, etc.) for each analysis requires considerable experience and multiple techniques, and the accuracy of analysis decreases as the number of explanatory variables increases [
13
,
14
,
15
]. In recent years, numerical modeling for such relationships has been accomplished by constructing an artificial neural network (ANN) model, which is capable of learning and generalizing from examples through the trial-and-error method without any presumptions [
13
,
16
]. ANNs can not only produce correct or nearly correct solutions to incomplete tasks, but also generate evidential results, even when the data are poor or insufficient [
17
,
18
]. Owing to these advantages, numerous researchers have applied ANNs for predicting the CS and other properties of concrete [
4
,
19
,
20
,
21
]. Bilim (2009) [
21
] used ANN models that were trained by several different back-propagation (BP) algorithms to predict the CS of GGBFS concrete based on concrete ingredients and age. Bakhta Boukhatem et al. (2011) [
22
] investigated the efficiency factor of GGBFS related with concrete strength by using ANNs.
In most studies employing ANN models for the estimation of concrete properties, a BP algorithm was used to train the network [
19
,
20
,
21
]. Nevertheless, the BP algorithm has some disadvantages: it can be easily trapped in local minima depending on the selection of initial parameters and it may be unreliable (with a low prediction accuracy), relying on training data [
23
,
24
]. Combinations of BP and several metaheuristic algorithms have been proposed as alternatives to overcome these drawbacks. Among the metaheuristic algorithms, particle swarm optimization (PSO) has been often integrated with BP algorithm to improve the performance of predictive models due to its simplicity and wide applicability. The hybrid PSO-BP algorithm uses the global search ability of PSO algorithm and the fast-converging capabilities of BP algorithm so that the ANN models with it can converge to true global optimization more accurately and rapidly than the models with a single algorithm. The effectiveness and superiority of this hybrid algorithm have been proven in various fields [
25
,
26
,
27
,
28
]. Bo et al. (2017) [
27
] proposed a hybrid PSO-BP neural network for wind power forecasting, and its performance was compared to the network that was trained by the conventional BP algorithm. The results of their study showed that the performance prediction of the developed hybrid algorithm is superior to the basic BP algorithm. Wang et al. (2015) [
28
] used the PSO-BP neural network to enhance the performance of the integrated navigation system and indicated that neural networks with the hybrid PSO-BP algorithm can compensate and estimate the navigation error more effectively than the conventional neural networks. However, few studies have been performed on the use of the hybrid algorithms to develop ANN models for predicting concrete properties. 
In this study, three different ANN models using BP, PSO, and hybrid PSO-BP algorithms were developed for predicting the CS of GGBFS concrete based on the concrete mix ingredients and curing temperature. The prediction results of these models were compared to investigate the beneficial effects of combining the BP and PSO algorithms and select the best intelligent system for the estimation of GGBFS concrete strength.
It is necessary to prepare data and construct a database for training and testing the prediction model to develop ANN-based models for predicting the CS of GGBFS-incorporated concrete. The 269 experimental data that were used in this study were collected from several reports [
11
,
29
,
30
,
31
,
32
,
33
,
34
,
35
,
36
,
37
]. All of the data contained complete sets of information regarding the mix design proportion, curing condition, and experimental CS of GGBFS concrete. The variables were selected according to all of the available data samples. The input parameters included the curing temperature (T), water to binder ratio (w/b), GGBFS to total binder ratio (GGBFS/B), water (W), fine aggregate (FA), coarse aggregate (CA), and superplasticizer (SP). The output variable was the CS at 28 days, which ranged from 17 to 80 MPa. Details regarding the chemical and mechanical properties of the concrete components are presented in [
11
,
29
,
30
,
31
,
32
,
33
,
34
,
35
,
36
,
37
]. 
Table 1
 presents the minimum and maximum values of each parameter, and 
Appendix A
 presents a database containing all of the data. 
ANNs are massive parallel systems that are composed of simple, highly interconnected processing units, i.e., artificial neurons, which process information. ANNs are effective for engineering applications and they have been widely used to solve diverse problems due to its ability learning from examples [
16
,
38
]. ANNs can be classified into different types depending on the architecture and information flow procedure [
15
]. Among them, the multilayer feedforward network consisting of an input layer, one or more hidden layer(s), and an output layer is the most commonly used network, where all of the neurons in each layer only have connections to the neurons of successive layers, not to neurons in the same layer [
15
,
17
]. Every node in a layer is connected to the nodes in the adjacent layers with different weights. The typical elements of a neuron are shown in 
Figure 1
: inputs, a summation function, an activation function, a bias, and an output. In every neuron except for the input neurons, signals from the previous layer (
x
i
) are multiplied by an associated adaptive weight (
w
ij
), which indicates the connection strength of the neuron with a particular input, and the summation function is then applied to the weighted signals [
39
]. Finally, the bias of the neuron (
b
j
) is added to the aggregate signals, which forms the net input of the neurons (
n
i
). This process can be mathematically expressed as:










n


i




=






âˆ‘












w




i


j








x


j




+




b


i




.










(1)




The output (
y
i
) of the neuron is then obtained by applying an activation function (
f
) to the net input (
n
i
):










y


i




=


f




(






n


i






)




.










(2)




The activation function limits the amplitude of the output of a neuron within a manageable range and introduces nonlinear properties to the neuron. In general, the hyperbolic tangent function is a commonly used activation function in multilayer models [
15
].
Training ANNs is a process of updating the connection weights and biases, so that the network exhibits desired or interesting behavior. In the course of training, the network architecture and parameters are adjusted by the iterative simulation with the given training examples to minimize the error function, which is often represented as the root mean squared error (RMSE), and to produce outputs that are equal or close to the targets [
39
,
40
]. Instead of following a set of rules that are specified by experts, ANNs automatically learn underlying rules from the given examples [
41
]. The steps used for training the network are called the learning algorithm. 
The BP algorithm is the most widely used algorithm for training ANNs [
42
]. It is a gradient-based procedure to minimize the error between the network outputs and the desired outputs, adjusting the weights and biases by a small amount at a time [
15
,
17
]. It comprises two procedures: a forward stage and a backward stage. In the forward procedure, the input signals move forward through the network and the error is calculated in the output layer. Subsequently, the error is propagated backward from the output layer to the input layer, updating parameters for the direction in which the performance function most rapidly decreases [
40
,
42
]. The change of the weights during each iteration is calculated, as follows:








Î”




w


k




=


Î±


Î”




w




k


âˆ’


1






âˆ’


Î·






âˆ‚


E






âˆ‚


w






,










(3)





where 


w


 is the weight, 




Î”




w


k






 and 




Î”




w




k


âˆ’


1








 are the changes in the weight 


w


 at 
k
 and 
k
âˆ’1 iteration, Î± is the momentum factor, and 


Î·


 is the learning rate. The entire procedure is repeated until the performance of the network reaches an acceptable level.
PSO is a stochastic optimization technique for finding the best solution, which is inspired by the social behavior of biological organisms to locate desirable positions in a given area through cooperation and competition [
43
,
44
,
45
,
46
]. In PSO, some entities, called particles, are scattered in the search space, and the position of each particle represents a possible solution to the optimization problem in the n-dimensional search space [
46
,
47
]. Each particle moves iteratively through the problem space to find the optimal locations, while remembering the best position it has ever visited and communicating with other particles. 
The position and velocity of the particles are randomly initialized at the beginning of the process and, during every iteration, each particle accelerates toward its own personal best solution discovered so far, as well as the global best position found thus far across the whole population [
48
]. The velocity and position of each particle are updated via the following equations at every step 
t
 [
49
]:












v


â†’






t


+


1






=


w


Ã—






v


â†’




t




+




c


1




Ã—




r


1




Ã—




(








p


b


e


s


t




â†’




âˆ’






x


â†’




t






)




+




c


2




Ã—




r


2




Ã—




(








g


b


e


s


t




â†’




âˆ’






x


â†’




t






)




,










(4)
















x


â†’






t


+


1






=






x


â†’




t




+






v


â†’






t


+


1






,










(5)





where 








v


â†’






t


+


1








, 








v


â†’




t






, 








x


â†’






t


+


1








, and 








x


â†’




t






 represent the new velocity, current velocity, new position, and current position of the particles. 






r


1






 and 






r


2






 are random numbers uniformly distributed in the range of (0, 1) [
50
], giving the particles good state space exploration ability. 






c


1






 and 






c


2






 are referred to as acceleration coefficients, which represent the strength of attraction toward the personal best position (








p


b


e


s


t




â†’






) and the global best position (








g


b


e


s


t




â†’






), respectively [
50
,
51
]. The velocity (








v


â†’




t




)




 is updated based on its current values multiplied by the inertia weight and the distances from its current position to the personal best and the global best. The particle position (








x


â†’




t




)




 is adjusted according to the newly computed velocity (








v


â†’






t


+


1








). Subsequently, the fitness of each updated position is evaluated, and the personal best and global best are updated during each iteration. This process is repeated until the expected position is obtained or the termination criteria are satisfied. 
The hybrid PSO-BP algorithm that is proposed herein is an optimization method that combines the PSO with the BP. Although the BP algorithm is the most widely used training algorithm for ANNs, it can easily fall into the local optimal solution, and its performance depends on the initial weights of the ANN [
23
,
27
]. If the initial weights and biases are far from the optimal values that can give the global optimal solutions, the ANN might become stuck at the local minimum [
23
]. Many researchers have combined the BP algorithm with metaheuristic optimization algorithms, such as PSO, genetic algorithm, and harmony search algorithm, to overcome these shortcomings of the BP algorithm and enhance the accuracy of models [
23
,
45
,
52
]. Among them, PSO has been often used to improve the performance of BP training in ANNs due to its simplicity and wide applicability [
27
,
52
]. 
The hybrid PSO-BP algorithm employs the global search ability of the PSO algorithm to obtain the initial weights and biases of the ANN that can lead the network to converge to the global minimum of the error function, and it uses the fast-converging capabilities of the BP algorithm. The near-global optimal initial weights and biases that were obtained by the PSO algorithm were applied in BP training to find true global optimization and improve performance of the ANN. 
Figure 2
 describes the overall calculation process of the PSO-BP algorithm that was used in this study. 
Section 4
 provides details regarding the determination of the parameters and the modeling of the PSO-BP ANN for predicting the CS of concrete.
This section presents the procedures for developing the ANN models while using the BP, PSO, and PSO-BP algorithms for predicting the CS of GGBFS concrete. As previously mentioned, the curing temperature (T), water to binder ratio (w/b), GGBFS to total binder ratio (GGBFS/B), water (W), fine aggregate (FA), coarse aggregate (CA), and superplasticizer (SP) were used as the input parameters for the CS prediction models. To construct and evaluate the network models, the dataset was divided into training and testing sets; 80% of the data were used for training and the remaining 20% were employed for testing. For the BP algorithm, 10% of the training dataset was used for validation. The test set was not applied in training, but it was used to evaluate the generalization performance of the developed network. All of the models presented in this study were developed while using MATLAB R2018a.
There are several BP algorithms that can be applied in ANNs, such as the Powell Beale conjugate gradient, BFGS Quasi Newton, and Bayesian regularization. Among these BP algorithms, the Levenbergâ€“Marquardt algorithm, which has been used most commonly in training networks, owing to its high speed and robustness, was adopted in this study to train the ANNs [
53
,
54
]. It has been utilized for developing predictive models for concrete properties, and its effectiveness as compared with other BP algorithms has been proven [
14
,
15
,
21
]. 
Before the training of the network, all of the input and target values were normalized within the range [âˆ’1, 1] while using the following equation:










V




n


o


r


m






=


2




(








V


âˆ’




V




m


i


n












V




m


a


x






âˆ’




V




m


i


n












)




âˆ’


1


,










(6)





where 


V


 and 






V




n


o


r


m








 represent the raw and normalized values, respectively. 






V




m


a


x








 and 






V




m


i


n








 indicate the largest and smallest values of 


V


, respectively. Normalization of the data can improve the efficiency of learning and simplify the design procedure [
39
]. 
The performance of ANNs depends strongly on the network architecture and parameters, including the number of hidden layers, number of neurons in each hidden layer, and activation functions. According to various researchers, ANNs with only one hidden layer can solve almost all engineering problems [
55
,
56
,
57
] and generally produce excellent results [
53
]. Therefore, all of the ANN-based predictive models that were constructed in this study had a single hidden layer. 
Figure 3
 shows the architecture of the CS prediction ANN models. The hyperbolic tangent function and linear function were used as the activation functions of the hidden and output neurons, respectively. 
As highlighted by several researchers, determining the number of neurons in the hidden layer (
N
h
) is a critical task, because this number significantly affects the performance of ANNs. However, there is no theoretical rule for selecting the proper value of 
N
h
. Therefore, in this study, it was determined through trial and error. Several different ANNs were constructed with various values of 
N
h
 within a reasonable range based on previously proposed empirical equations [
55
,
58
,
59
,
60
,
61
,
62
], and their performances were evaluated while using the coefficient of determination (
R
2
) to obtain the optimal value. 
Table 2
 presents the equations used to decide the 
N
h
 range for the CS model. As shown, the 
N
h
 range (2,21) was selected for the CS prediction BP ANN. The models with different 
N
h
 values were each run 10 times, and the average 
R
2
 values of both the training and testing sets were computed to determine the optimal number of hidden neurons. The BP model with 15 hidden neurons exhibited the best performance; thus, a 7-15-1 architecture was applied to the BP ANN models in this study. Additional details regarding the specifications of the best BP ANN model for predicting the CS are presented later. 
The PSO ANN represents the ANN model that was trained by the PSO algorithm, in which the positions of the particles indicate the weights and biases of the ANN. The parameters that are associated with PSO and the ANN should be selected properly to achieve the best performance of the PSO ANN. However, the parameters that lead to the minimum of the cost function are not the same in all cases, and there is no theoretical approach for identifying the optimal values. In this study, to construct a robust and accurate predictive model, the ANN parameter, i.e., the network architecture, and the PSO parameters, including the number of particles in the swarm (
Nop
) and the acceleration coefficients (
c
1
, 
c
2
), were determined through parametric analyses. The inertia weight (
w
)â€”one of the PSO parametersâ€”was taken as a random number within the range of (0, 1) [
25
,
63
]. Various values that were suggested in the previous studies were considered to find the optimal parameters, as shown in 
Table 3
.
Each time that a network was trained, the training was stopped when the termination criteria were satisfied, i.e., the iteration number reached the limit of 2000 or the improvement in the cost function was <10
âˆ’8
 for 100 successive iterations [
25
]. The models with different parameters were each trained five times, and 
R
2
, as a performance measure, was calculated for the training and testing data in every run. The best model was selected according to the average values of 
R
2
 through the same method that was described in the previous section. The best result was obtained when the number of hidden neurons was 15 (as in the case of the BP ANN), the swarm size was 30, and 
c
1
 and 
c
2
 were 1.5 and 2.5, respectively. 
Hybrid algorithms combining PSO and BP have been used in ANNs to solve several engineering problems, owing to their fast convergence and global optimization capability. In the PSO-BP network model, the PSO algorithm attempted to find the near-global optimal initial points instead of random initial weights for the BP training of the ANN. The parameters that were associated with both algorithms were specified as the values determined in 
Section 4.1
 and 
Section 4.2
.
The CS prediction ANN models trained by the BP, PSO, and PSO-BP algorithms were evaluated and compared. Each model was run 15 times with different training and testing data, and the results were evaluated with regard to the prediction accuracy, efficiency, and stability through a threefold procedure.
The four statistical indices that were employed to evaluate the performance capacity and prediction accuracy of each CS prediction model. The RMSE, mean absolute error (MAE), mean absolute percentage error (MAPE), and coefficient of determination (
R
2
) were the main criteria that were used for performance measurement. These indices are defined as follows:








MAE


=




1


n








âˆ‘






i


=


1




n






|






t


i




âˆ’




o


i






|












(7)












RMSE


=








1


n








âˆ‘






i


=


1




n










(






t


i




âˆ’




o


i






)






2
















(8)












MAPE


=




1


n








âˆ‘






i


=


1




n






|










t


i




âˆ’




o


i










t


i










|












(9)














R


2




=








[












âˆ‘






i


=


1




n






(






o


i




âˆ’




o


Â¯






)






(






t


i




âˆ’




t


Â¯






)
















âˆ‘






i


=


1




n










(






o


i




âˆ’




o


Â¯






)






2








âˆ‘






i


=


1




n










(






t


i




âˆ’




t


Â¯






)






2














]






2












(10)





where 




o




 is the predicted value of the compressive strength, 


t


 is the experimental value, 


n


 is the total number of data, 




o


Â¯




 is the mean value of the predicted strength, and 




t


Â¯




 is the mean value of the experimental strength. Lower values of the MAE, RMSE, and MAPE and higher values of 
R
2
 indicate a better predictability of the models.
Table 4
 presents the performance indices of the best BP ANN, PSO ANN, and PSO-BP ANN models. As shown, among the developed models, the model that was trained by the hybrid algorithm had the lowest MAE, RMSE, and MAPE, as well as the highest 
R
2
, for both the training and testing datasets, which indicated that this model could predict the CS with the highest accuracy. Furthermore, the difference between the statistical performance results for the training and testing data was the smallest for the hybrid model. This result reveals the PSO-BP network model has better generalization performance than the other models. 
Figure 4
, 
Figure 5
 and 
Figure 6
 present the relationships between the experimental CS and the values that were predicted by the BP, PSO, and PSO-BP networks, respectively. The BP and PSO-BP models exhibited 
R
2
 values of >0.9 for both the training and testing datasets, which indicated that these models can provide reliable outputs with a high degree of fitness to the actual values. Thus, they are suitable for predicting the CS of GGBFS based on the mixture constituents and curing temperature. The relatively high 
R
2
 values of the proposed PSO-BP model suggest that it has the potential for estimating strength more accurately than the other models. 
To perform a detailed assessment, the computational efficiency of each model was evaluated while using the 
SR
 [
64
], which is given by the following equations:








e




p


i




=




|










t


i




âˆ’




o


i










t


i










|




Ã—


100


%


,


S


R


=








N




B


e


p








N




Ã—


100


%


,










(11)





where 




e




p


i






 is the relative error and 






t


i






 and 






o


i






 are the measured and predicted values, respectively, of the 


i


th data entry in the dataset. 






N




B


e


p








 is the number of data entries, the relative error of which is smaller than the restrained error bound 




B


e


p




 (i.e., the number of entries within the area 




e




p


i




<


B


e


p




), and 


N


 is the total number of data in the considered set. The 
SR
 is the percentage of data that have equal or smaller relative error than the specified error criterion and it has been used for the estimation of the numerical efficiency and validity of the developed models in several studies [
64
]. The 
SR
 of each model was computed with the variation of the restrained error 




B


e


p




 from 0 to 100%. 
Figure 7
 and 
Table 5
 show the obtained results. When 




B


e


p




 was 5%, the 
SR
 for the PSO-BP ANN model was 64.1%, and those for the conventional BP ANN and the PSO ANN were 49.2% and 30.2%, respectively. These results indicate that 64.1% of the data were well-predicted by the hybrid model, with accuracy of 




e


p


<


5


%




. As shown in 
Figure 7
, for all values of 




B


e


p




, including 5%, the 
SR
 of the PSO-BP network model was greater than that of the other models. Additionally, for the PSO-BP ANN, the relative error of the entire data was not greater than 22%; that is, when the restrained error 




B


e


p




 was 22%, the 
SR
 was 100%. In comparison, the prediction errors of all the data for the ANNs that were trained by the BP algorithm alone and the PSO algorithm alone were equal to or smaller than 43% and 35%, respectively. These results indicate that the hybrid prediction model has better validity and efficiency than the other models for predicting the CS of GGBFS concrete. 
Finally, to evaluate the stability of the developed models, the standard deviations of the RMSE for the models that were trained with 15 randomly selected training samples were calculated and compared. An ANN-based predictive model can give different outputs and have different performance for the same inputs, depending on the initial weight and bias values or the data-splitting method [
24
]. This property can cause significant problems in practical application [
53
,
65
]. Therefore, the stability of an ANN model must be validated prior to use [
65
,
66
]. In this study, as mentioned previously, each model was trained 15 times while using different combinations of training and testing sets and, then, the standard deviation (


S


) of the RMSE was computed while using Equation (12) to evaluate the stability of the developed models. The standard deviation indicates the sensitivity of the prediction performance of a model to the data used to train and develop it. A model with higher standard deviation is more strongly dependent on the training observations.











X


Â¯




=




1


N








âˆ‘






k


=




N






X


k




,


â€ƒ


S


=








1


N








âˆ‘






k


=


1




N








(




X


k




âˆ’




X


Â¯




)




2








.










(12)




Here, 


N


 is the total number of training data and 






X


k






 is the RMSE for the kth training set. 




X


Â¯




 denotes the mean value of the RMSE for models that are trained by a specific algorithm with 15 randomly selected training samples. 
Figure 8
 and 
Table 6
 show the standard deviations and mean values for the BP, PSO, and PSO-BP ANN models that are based on the training and testing datasets. The BP ANN model had lower means and higher standard deviations of RMSE than PSO ANN model. These results show that the ANN models trained by BP algorithm have better prediction accuracy, but lower stability than the PSO ANN models. The standard deviations and means of the PSO-BP ANN model for both the training and testing data were smaller than those of the other models, which indicates that the model based on the hybrid algorithm was less influenced by the data splitting. Moreover, the difference between the standard deviations for the two datasets was the smallest for the PSO-BP model. As a result, it can be concluded that the PSO-BP neural network model is the most stable and accurate among the three models for estimating the CS of GGBFS concrete.
The ANN models were constructed to predict the CS of GGBFS concrete based on the concrete mix proportions and curing temperature while using three different learning algorithms: BP, PSO, and PSO-BP. The parameters that were associated with each algorithm or neural network were determined via a trial-and-error method, and the proposed models were trained while using 269 data divided into two sets: testing and training. The developed PSO-BP neural network model was compared with ANN models that were trained by either BP or PSO to verify its accuracy, efficiency, and stability in prediction and to prove the synergetic benefits of using the hybrid algorithms.
The PSO-BP neural network model had the lowest values of the RMSE, MAE, and MAPE, as well as the highest values of 
R
2
 for both the training and testing data, and the deviation between the results that were obtained from the training and testing data was the smallest for the PSO-BP network. These results indicate that the proposed hybrid model has the best fit for not only training data, but also unseen data. 
As shown in 
Table 5
 and 
Figure 7
, the hybrid model also had the highest 




S


R




 for the specified error limit; i.e., its maximum relative error was smaller than those of the other two models. Additionally, when the models were trained with 15 randomly selected training samples, the PSO-BP network model exhibited the lowest standard deviation and mean values of the RMSE, which demonstrates that its prediction performance was the least affected by data division.
Several performance analyses indicated that the PSO-BP ANN model offers more accurate, reliable, and stable prediction of the CS of GGBFS concrete than the other models. That is, it has the best predictability and generalization performance among the developed models in this study. According to the results, it is obvious that using the hybrid algorithm has synergistic benefits for the performance of ANN models and the proposed hybrid PSO-BP ANN model is reliable for estimating the CS of GGBFS concrete.
Conceptualization, I.-J.H., Y.-S.Y. and J.-H.K.; investigation, I.-J.H., T.-F.Y. and J.-Y.L.; writingâ€”original draft preparation, I.-J.H.
This work was supported by the National Research Foundation of Korea (NRF) grant funded by the Korea government (MSIT) (NRF-2019R1A2C2087646).
The authors declare no conflict of interest.
N
i
 is the number of input neurons.
N
i
 is the number of input neurons.
TR and TS represent the training and testing datasets, respectively.
TR and TS represent the training and testing datasets, respectively.
Bep
 represents the restrained error.
Bep
 represents the restrained error.
TR and TS represent the training and testing datasets, respectively.
TR and TS represent the training and testing datasets, respectively.