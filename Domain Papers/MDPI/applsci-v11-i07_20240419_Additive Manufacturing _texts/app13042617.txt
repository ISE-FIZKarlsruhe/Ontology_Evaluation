Injection molding is one of the most important processes for the mass production of plastic parts. In recent years, many researchers have focused on predicting the occurrence and intensity of defects in injected molded parts, as well as the optimization of process parameters to avoid such defects. One of the most frequent defects of manufactured parts is blush, which usually occurs around the gate location. In this study, to identify the effective parameters on blush formation, eight design parameters with effect probability on the influence of this defect have been investigated. Using a combination of design of experiments (DOE), finite element analysis (FEA), and ANOVA, the most significant parameters have been identified (runner diameter, holding pressure, flow rate, and melt temperature). Furthermore, to provide an efficient predictive model, machine learning methods such as basic artificial neural networks, their combination with genetic algorithms, and particle swarm optimization have been applied and their performance analyzed. It was found that the basic artificial neural network (ANN), with an average accuracy error of 1.3%, provides the closest predictions to the FEA results. Additionally, the process parameters were optimized using ANOVA and a genetic algorithm, which resulted in a significant reduction in the blush defect area.
With the widespread use of algorithms in the engineering sciences, lots of additional costs associated with time-consuming and expensive tests have been eliminated from the product design and production development cycle. Today’s modeling, prediction, and optimization methods have extremely reduced the need to use traditional experimental trials and measurements for product and process improvement. These techniques include statistical methods such as Analysis of Variances (ANOVA), machine learning methods such as Artificial Neural Networks (ANNs), as well as optimization methods using meta-heuristic algorithms. Nowadays, the use of Finite Element Analysis (FEA) methods combined with modern optimization methods has helped manufacturers select the optimal levels of input parameters and achieve the highest quality products [
1
,
2
]. Due to the complex behavior of polymers, particularly when processed by injection molding, many parameters can affect the product quality. Hence, monitoring and controlling each of these parameters as well as their interactions is vital to prevent injection defects. For example, a fundamental quality of injection molded parts is based on the reduction of warpage. Among statistical methods, Genetic Algorithm (GA) is known as a popular technique for reducing warpage [
3
], as well as other defects. Additionally, ANNs have been widely used to predict the shrinkage values of the examined parts [
4
]. Wang et al. [
5
], by taking an ANN approach, found that the shrinkage of the manufactured part has an inverse relationship with process parameters such as packing time, injection pressure, holding pressure, and melt temperature, and a direct relationship with cooling time and mold temperature. Altan et al. [
6
] conducted a study to reduce the shrinkage of a manufactured part. They studied parts composed of polypropylene and polystyrene. After the design of experiments based on the Taguchi method, an ANOVA was performed. As a result, optimal levels for design parameters were obtained, and by employing these optimal parameters in the simulation, the shrinkage of the parts was reduced significantly. An ANN was also trained to predict response values, and it was found that this kind of network has a good ability for this purpose. In a study conducted by Chen et al. [
7
], it was found that the parameters of holding pressure and melt temperature are the most effective factors in the warpage of the parts. A model was also presented that demonstrated the ability to predict parts warpage in both simulations and experimental tests with relatively high accuracy. It is also possible to use several optimization methods, such as Taguchi method, ANN, GA, Response Surface Methodology (RSM), Particle Swarm Optimization (PSO), etc. simultaneously to optimize the parameters involved in the part’s warpage. Finally, according to the prediction error and the number of iterations performed, the best optimization method can be selected [
8
,
9
,
10
,
11
]. The Taguchi optimization method has been used to reduce the warpage of the parts and improve their strength. Consequently, the holding pressure was found to be the most significant factor in the warpage of the parts [
12
]. Similar research has been conducted using the Taguchi, Non-dominated Sorting Genetic Algorithm (NSGA-II), and RSM methods to optimize warpage, shrinkage, and residual stress by Li et al. [
13
]. Reduction of warpage by considering mold filling as a constraint using the RBF (Radial Basis Function) method was achieved in [
14
]. The RBF method was also used to perform a multi-objective optimization to reduce production time, clamping force, and warpage in the study by Kitayama et al. [
15
]. ANNs and GA were used to study shrinkage. Researchers found a relationship between design variables and the target parameter, which showed a great ability of ANN to predict the results [
16
]. In two separate studies, Kitayama et al. arranged two multi-objective optimizations that both used the RBF method to improve the weld lines. In one of these studies, the weld lines were optimized while reducing the clamping force. In a second study, the goal of the research was to reduce cycle time and weld lines [
17
,
18
]. Other than the determination of the optimal levels for the factors related to the process parameters, meta-heuristic algorithms have been also used to determine the optimal values for the composition ratio of polymers to reduce the maximum shrinkage in the molded products [
19
]. Xu et al. used the Taguchi method, ANN, multi-objective PSO algorithm, and a combination of ANN with PSO to attain the optimal level for design parameters to reduce the part weight, shrinkage, and flash size [
20
]. Along with the shrinkage of the produced part, other parameters such as clamping force have been inspected simultaneously in a multi-objective optimization using the RBF method [
21
]. To reduce the part shrinkage, the cycle time, and injection time at the same time, a multi-objective optimization using an ANN-based program was carried out [
22
]. Some studies have examined other types of defects. For example, the research by Tabi et al. [
23
] aimed at improving the needle-shaped defects around the gate location. The role of residual stress in the occurrence of cracks in parts [
24
], and the use of RSM for cutting down the average shear rate around the gate [
25
] were also investigated. Furthermore, improving the optical properties of polymer optics as a result of reducing residual stress in injection molded plastic lenses was the subject of another study [
26
]. Li et al. employed Kriging and NSGA-II methods to investigate the effect of runner diameter and process parameters on the quality, cost, and production efficiency [
27
]. The Taguchi method has been used to investigate the effect of process parameters on the mechanical properties of parts produced with recycled plastic. It was revealed that injection time with 40.5% and material temperature with 43.3% of impact are the most important factors in warpage and yield stress of the produced part, respectively [
28
]. Additionally, Martowibowo et al. [
29
] used a GA, with a prediction error of approximately 1%, and could find the optimal values of process parameters in such a way that the production time of the part was significantly reduced. In other studies, FEM and conventional optimization methods were used to decrease the cycle time to a minimum by providing an optimal design for the cooling system [
15
,
30
]. Eladl et al. [
31
] studied the effect of process parameters on the formation of flash defect. During the study, polypropylene (PP) and acrylonitrile butadiene styrene (ABS) were investigated. The outputs of the study were part mass, flow length, and flash formation. After employing DOE and statistical analysis, it was shown the injection speed and packing pressure were the most influential factors on the flash area for both materials. Regi et al. [
32
] used a different technique to investigate the flow propagation in the molds. They used a transparent window on one of the walls of the mold to visually observe the flow of the material. The objective of the study was to compare FEA simulation results with experiments with focus on flow hesitation. A high-speed camera was used to record the mold filling phase with two different materials of PP and ABS. After employing DOE and ANOVA, the results demonstrated that flow progression and hesitation are dependent on wall thickness, injection velocity, and material type. Loaldi et al. [
33
], using the same techniques (DOE and FEA) focused on the experimental validation of the injection molding simulation of microparts, also with a focus on flash formation. Results confirmed that higher values of holding pressure, injection speed, mold temperature, melt temperature generate larger flash areas. The trends were correctly predicted by the FEA flow simulations. Chen et al. [
34
] employed the Taguchi, ANOVA, backpropagation ANN, GA, and Davidson-Fletcher-Powell methods to improve the product quality. As a result of this optimization, as well as increasing demands in terms of products quality, issues such as waste, number of defective parts, need for inspection during production, need for recycling, and production time were also decreased. By using machine learning methods, Finkeldey et al. [
35
] were able to accurately predict the weight and thickness of the manufactured part. Mehat et al. [
36
] used process parameters optimization instead of adding additives to improve the mechanical properties in a part produced with recycled plastic. Clearly, considerable research efforts have been focused recently to optimize injection molding parts characteristics and minimize several types of defects. However, very limited research has investigated the factors affecting the blush defect. At least, one study can be indicated to have addressed the influence of process parameters on blush: results by Llado et al. [
37
] indicated that injection flow rate and melt temperature are the most effective parameters. Blush defect not only deteriorates the appearance of the part but also reduces the lifetime and strength of the product. Therefore, due to its importance and the limited research performed so far, there is a clear need for further investigation on the parameters affecting the incidence and exacerbation of this defect. Despite the importance of preventing the incidence of this defect in plastic injection, so far, only a few studies have investigated its causes and impacts.
The present research has inspected the effects of eight injection molding factors (flow rate, melt temperature, holding pressure, mold temperature, runner diameter, gate diameter, gate angle, included angle) on the blush. The novelty of the present study is the relatively number of investigated parameters, including both process and design factors. By examining a large variety of parameters, the study results in a comprehensive view of the causes of this defect. What is more, contrary to previous research, the interaction effects of design parameters on the incidence of the defect have also been studied in the current study. In addition, for the first time, different types of ANNs have been used to predict the values of blush defect, and a GA is utilized to optimize the levels of effective factors to achieve the lowest probable blush defect.
The research method of this study began with the creation of a CAD model of the injection molded component (plastic bushing). Then, as screening step, the fractional factorial DOE with two levels and the eight design parameters has been conducted. After performing FEA, the results were included in an ANOVA routine to identify effective and ineffective factors. Thereafter, for a more detailed study of the effect of the most relevant parameters, a second design of experiment of CCD (Central Composite Design) type has been performed with five levels on the effective factors.
Blush is a visual defect that occurs as white halos, usually around the gate location. The part under study was a size bushing produced with an injection mold equipped with two cavities. Bushings are a kind a fitting in piping that can be used to connect two pipes together, change the pipeline and flow direction, derive new pipe branches, and to blind a branch. Polyvinyl chloride (PVC) fittings are commonly used in industry due to their ease of use, durability, and cost effectiveness. The geometry of the bushing and injection mold runners is shown in 
Figure 1
. The gate is of round type, and the length of the sprue is 76 mm with a conic angle of 3°. All the geometrical dimensions to reproduce the CAD model are included in 
Figure 1
.
The material used in the study is a commercially available grade of polyvinyl chloride (PVC) produced by Solvay ET CIE (Brussels, Belgium) under the commercial name Benvic IR705. This type of PVC is widely used in the production of pipes and fittings. Some of its mechanical, thermal, and rheological properties are presented in 
Table 1
 [
34
]. 
Figure 2
 shows the PVT data and viscosity characteristics (pressure, specific volume, and temperature) of the material based on the Autodesk Moldflow software database.
As the first step, the CAD model of the bushing was created. This model was imported into the Autodesk Moldflow software for mesh generation and creating the runner system. Concurrently, the bushing has been masked using 459,096 3D tetragonal elements for both mold cavities. The overall element size of the bushing is 3.5 mm, and due to the greater sensitivity of the gate location area, the element size of this area is set to 2 mm.
His section may be divided by subheadings. It should provide a concise and precise description of the experimental results, their interpretation, as well as the experimental conclusions that can be drawn.
A visualization of blush simulation is shown in 
Figure 3
a. As an assumption, the shape of the defect was assumed, due to the visual similarity and to avoid adding unnecessary complexity to the problem, assumed to be similar to an ellipse. Therefore, the formula for calculating the area of the ellipse has been applied to determine the area of the defect. 
Figure 3
b represents the measures needed to calculate of the defect area.
The area of the ellipse can be calculated by Equation (1):








A


r


e


a


=


π


×




L


2




×




W


2












(1)





where 
L
 and 
W
 represent the large and the small diameter of the ellipse, respectively. To calculate the area of the defect, a direct measurement of the value of 
W
, the value of 
L
 was calculated by measuring the length of the arc from top edge to bottom edge of the defect, as shown in 
Figure 3
b, via Equations (2)–(7).











β


1




=






tan






−


1






(








h


1










g


1








)










(2)














α


1




=


180


−


(


2


×




β


1




)










(3)




Having Equations (2) and (3), the angle of the top arc of defect (
α
1
) can be calculated. Additionally, Equations (3) and (4) calculate the same parameter (α
2
) for the bottom part of the defect.











β


2




=






tan






−


1






(








h


2










g


2








)










(4)














α


2




=


180


−


(


2


×




β


2




)










(5)




Equation (6) sums up the amounts of top and bottom angle of the defect’s arc. Thus, 
α
T
 represents the total angle of the defect’s arc.











α


T




=




α


1




+




α


2












(6)












L


=








α


T








360






×


2


π


R










(7)




According to Equation (7), the value of 
L
 can be calculated. Having the values of 
L
 and 
W
, the area of the defect was calculated in each case through Equation (1).
To validate the simulations, experimental tests were carried out according to the procedure shown in 
Figure 4
. In the first step, the PVC compound with the properties given in 
Table 1
 was fed into the injection molding machine. Next, process parameters were set in the digital process setting panel. After that, the process started with closing the mold, and after injection, the bushing was manufactured. As the next step, accurate and high-resolution imaging was employed to obtain a high-quality representation of the bushing. Eventually, the images were processed by a computer software to better visualize the blush defect. For experimental measurement of the blush defect area, the length and the width of the defect were measured. These measurements enabled us to calculate the defect’s area using the ellipse area measurement formula (Equation (1)).
Using Minitab software, a fractional factorial design was first created as the screening step, based on the eight previously mentioned parameters with a ratio of an 1/8. This ratio means that the number of experiments performed in the fractional DOE is 1/8 of the full factorial design. The number of full factorial DOE trials is 256, but with an 1/8 ratio, the fractional DOE is reduced to 32 experiments. The input parameters have been considered to all vary between two levels (see 
Table 2
). After identifying the most effective parameters, a CCD design of the experiments will be conducted to clarify the impact of each effective parameter. After that, the results of ANOVA will represent the effective parameters and eventually a regression predictive model presented by the software.
To provide a model for predicting the area of blush, several machine learning algorithms were considered and employed. The algorithms used in this research include basic ANN, combination of ANN and PSO, and combination of ANN and GA. The most straightforward ANN involves an input layer, a hidden layer, and an output layer. Each layer can contain one or more neurons. According to Equation (8), the value of each neuron is multiplied by the specified weight assigned to each link and added to the same value for all the other neurons in the same layer, and eventually enters the neurons of the next layer [
7
].











S


j




=






∑




j


=


0




N








x


i




×




w




i


j


















(8)





where 
x
i
 is the output of the 
ith
 neuron of the previous layer, and 






w




i


j








 is the weight of the link between the 
ith
 neuron of the previous layer and the 
jth
 neuron of the present layer. 






S


j






 represents the sum of the previous layer’s outputs multiplied by the connection weights, which is the net input entering the 
j
th
 neuron, and 
N
 represents the number of inputs to the 
jth
 neuron in the hidden layer. Each neuron in the network produces its output (






O


j






) by entering 






S


j






 that is a Tansig activator function similar to one indicated in Equation (9) [
9
]:










O


j




=


F


(




S


j




)


=






1


−




e




−




S


j












1


+




e




−




S


j




















(9)




Basic ANN
In this research, the training was conducted with 70% of the available data provided in the DOE phase. Then, 15% of the available data was used as a validation dataset and the rest, 15% as a test dataset. In the first step, the weights were imported to the network randomly. Applying the gradient descent method causes these weights to be continuously updated during successive iterations. To train the network, the mean square error (
MSE
) of the predicted values should move towards minimization. Equations (10)–(12) represent this method [
9
,
20
]:








E


=


M


S


E


=




1


N








∑




i


=


1




N










(




y


p




−




y


t




)




2
















(10)












Δ




w




i


j






=


−


η






∂


E






∂




w




i


j










×




O


j












(11)














w




i


j




m




=




w




i


j






m


−


1






+


Δ




w




i


j














(12)





where 


η


 is the learning rate and controls the network convergence (a number between 0 and 1), 
E
 represents the 
MSE
, 
N
 for the number of inputs, 






y


t






 desired output, predicted output by the ANN, and 
m
 indicates the iterations counter.
ANN + GA
This method is similar to the basic ANN method, except that instead of using the gradient descend function used in basic ANN, the appropriateness of the weights assigned to each link is determined through the GA process, which is the selection of the best, the crossover, and the mutation, so that the MSE is minimized. In this algorithm, the probability of selecting each parent is assessed through Equations (13) and (14) [
9
]:










f


i




=




k






m


i
















(13)














p


i




=








f


i












∑




j


=


1




N








f


i




















(14)





where 


k


 is a coefficient, 






m


i






 symbolizes the fitness of 
i
th
 input, 
N
 substitutes for the number of generation population, and 
j
 indicates the number of generations. Equation (15) is applied to combine the two chromosomes of 
C
i
 and 
C
h
 to produce the next generation [
9
].











{












C




h


j






=




C




h


j












(


1


−


b


)






+




C




i


j


b












C




i


j






=




C




i


j












(


1


−


b


)






+




C




h


j


b






















(15)





where 
b
 substitutes for a random number between 0 and 1 and indicates the chromosome’s intersection point. In addition, the Equations (16) and (17) are used to model the mutation in this algorithm [
9
].











C




m


n






=




{












C




m


n






+


(




C




min






−




C




m


n






)


×


f


(


g


)


,


r


≤


0.5








C




m


n






+


(




C




m


n






−




C




max






)


×


f


(


g


)


,


r


>


0.5


















(16)












f


(


g


)


=




r


2




(


1


−




g






G




max










)










(17)





where 






C




m


n








 represents the gene 






C




m


n








, 






C




min








 and 






C




max








 stands for the higher and lower bounds for genes, and 
r
 and 
r
2
 are random numbers while 
r
 is between 0 and 1, 
g
 indicates the number of present generation population and 
G
max
 is the maximum generations considered to iterate. So, the algorithm finally reaches a generation with perfectly fitting responses. A flowchart of the ANN + GA is shown in 
Figure 5
 and its pseudocode is reported in 
Appendix A
.
ANN + PSO
The PSO algorithm is a method established on swarm intelligence inspired by the behavior of a bird flock. The behavior of the particles, their speed, and the direction of their movement are influenced by the best experience of the particle itself in matching the goal and the best experience among all members of the population. The objective of this algorithm is to reduce the average fitness of all members of the population. In Equations (18)–(20), the best personal position of the particle is presented as 
Pbest
, and the best position of the whole particle swarm is symbolized by 
Gbest
. If the particles are located in an N-dimensional space, the vector 
X
i
 = (
X
i
1
, 
X
i
2
,…, 
X
iN
) and the vector 
V
i
 = (
V
i
1
, 
V
i
2
,…, 
V
iN
) represent the position and velocity of the particle 
i
, respectively. In each generation, the values of these vectors must be updated and compared to the previous generation. The Equations (19)–(21)are used to update these values.









w


(


t


)


=




w




max






−






t


(




w




max






−




w




min






)








t




max


















(18)














v




i


,


n






t


+


1






=


w




v




i


,


n




t




+




c


1






r




1


,


n






(


P


b


e


s




t




i


,


n




t




−




x




i


,


n




t




)


+




c


2






r




2


,


n






(


G


b


e


s




t


n


t




−




x




i


,


n




t




)










(19)














x




i


,


n






t


+


1






=




x




i


,


n




t




+




v




i


,


n






t


+


1














(20)





where 
t
 is counter index for generations, 
c
1
 and 
c
2
 stand for two positive coefficients for acceleration while 






r




1


,


n








 and 






r




2


,


n








 are two random coefficients with uniform distribution in 
Nth
 dimension of the space, 
n
 shows particle number, and 
m
 represents the inertia weight employed [
7
]. 
Figure 5
 depicts a flowchart of steps of optimizing layer weights and training the network using basic ANN, ANN + GA, and ANN + PSO. The pseudocodes for each of the three algorithms are also given in the 
Appendix A
.
In 
Figure 5
, the (a) route shows the basic ANN’s flowchart, the (b) route shows the steps of ANN + GA, and the (c) represents the flowchart of ANN + PSO. To calculate the training accuracy of the networks, the Equations (21)–(23) are employed.











P


E




=








B


P




−




B


M








B


M














(21)














M


E




=










∑


1


n








|






P


E














n










|










n












(22)












A


c


c


u


r


a


c




y




T


r






=


(


1


−




M


E




)


×


100










(23)





where 
P
E
 indicates the prediction error for each data group, 
B
P
 and 
B
M
 represent the predicted value of the blush defect and the measured value of the defect, respectively. 
n
 indicates the number of data sets, 
M
E
 represents the average error of the whole data set, and 
Accuracy
Tr
 shows the accuracy of training.
After training the networks, an optimization was conducted. Additionally, after training an accurate ANN, the prediction accuracy of the network has been measured, and the most accurate network has been employed as the fitness function of a GA to optimize the levels of design parameters. Then, the levels optimized by ANOVA and the GA will be compared together. In the flowchart shown in 
Figure 6
, the research method has been shown. In this figure, the simulation and DOE sections indicate all the steps taken through the creation of digital twin, getting the results of it, and employing statistical analysis on the data. The ANN section demonstrates the steps of using different machine learning methods to analyze the data. Then, as the last step, the GA optimization section reveals the work that has been conducted to optimize the parameters’ levels to reach the robust process setting with the lowest blush defect area.
To ensure the accuracy of the FEA, experimental tests were performed and compared with the simulation results. 
Table 3
 shows the validation results. As can be observed from this table, the results of FEA are in relatively good agreement with the results of the experimental tests, and the absolute value of the average deviation error is 5.6%. The parameters of flow rate, melt temperature, and holding pressure were varied to verify the results. Other parameters remained constant due to practical limitations in changing the geometry of the mold.
According to the shear stress heat map, the area that exceeded the maximum allowable shear stress (0.2 MPa) appeared as the blush [
34
]. As can be concluded from 
Table 3
, lower amounts of error were observed for simulations associated with process configurations, resulting in a smaller area of defect. Since the objective of the study is to decrease the area of defect, the closer the study gets to its goal, the lower the error amount. 
Figure 7
 shows a comparison between the simulation results for maximum shear stress and the blush defect in an experimental test performed with the same parameter settings.
To determine the effective parameters, a screening step was implemented using the fractional factorial design. The ANOVA results are given in 
Table 4
. These results indicate that the parameters of flow rate, melt temperature, holding pressure, and runner diameter were effective due to the lower 
p
-value of 0.05. The parameters of mold temperature, gate diameter, gate angle, and included angle only slightly impacted the defect area. Furthermore, the meaning of squares, which is obtained by dividing the treatment sum of squares by the degrees of freedom, can be used to determine which factors are significant. The higher the mean square, the more of an effect it has on the results [
38
,
39
].
The DOE intended for the screening step to be executed with all parameters varying between two levels. In the second phase, by performing CCD with an alpha coefficient of 1.4, the number of parameter levels was increased to five (shown in 
Table 5
). This could lead to a better understanding of the parameters’ effects on the process outputs.
To predict the area of the defect with a regression equation, an ANOVA was implemented on the results of the simulations suggested by the CCD. According to 
Table 6
 and considering the 
p
-value of the model equal to 0.000, it can be concluded that the model presented by ANOVA has good accuracy in the prediction of the defect area. The effect of all four parameters known to be effective in the previous step has been reaffirmed by the design of experiments carried out by considering more levels. Diagrams related to effective parameters can be seen in 
Figure 8
.
Figure 8
 illustrates the manner of the impact of each parameter on the results. According to the 
p
-value obtained from the effects of ANOVA, the runner diameter has the most significant impact on the area of the blush defect. After that, the parameters of holding pressure, flow rate, and melt temperature have the highest impact on the defect area, respectively. Utilizing ANOVA, a regression equation to predict the area of the defect has been worked out using all input parameters presented in Equation (24).









A


r


e


a


=


−


12367


+




(




25.7


×


A




)




−




(




25.4


×


B




)




−




(




13.82


×


C




)




+




(




3898


×


D




)




−




(




193.2


×


D


×


D




)












(24)





where 
A
 indicates the flow rate, 
B
 the melt temperature, 
C
 the holding pressure, and 
D
 represents the runner diameter. The standardized residual and histogram plot shown in 
Figure 9
 reveal the accuracy of Equation (24). As can be seen from the Versus Order plot, the predicted data are in general equally scattered around the zero line. Additionally, the histogram plot in this figure shows that the amount of data with a standard residual equal to or near zero is much higher than the amount of data with higher residuals. Thus, it can be concluded that the defect area amounts predicted by the regression model are in good agreement with the FEA results.
After training the ANN, the network should be verified with the data intended for testing. The test data in this study included 15% of the total data that had not been used in the ANN training phase. 
Table 7
 also compares the prediction accuracy of different types of ANN with that presented by ANOVA.
According to 
Table 7
, the best networks of each type have been chosen to compare the prediction accuracy. For basic ANN, the trained network in row 3 is considered as the selected basic ANN with the best performance. The type of activator function is ‘‘TanSig’’ for the first layer and ‘‘Linear’’ for the second layer. For ANN + PSO, the trained network in row 7 is regarded as the most suitable algorithm of this type. The trained network in row 11 has also been chosen as the most suitable ANN + GA combination. The mutation rate in this algorithm is 15%, and the cross-over rate is 65%. Additionally, 
Figure 10
 exhibits a comparison between the predicted values via the regression formula provided by ANOVA, selected neural networks of all three types (basic ANN, ANN + GA, and ANN + PSO) with the value obtained from the FEA. Furthermore, 
Table 8
 presents the values predicted by each algorithm for all the data sets compared with ANOVA predicted values and FEA results.
As it is clear from 
Figure 10
 and 
Table 8
, ANOVA with 86.5% accuracy and basic ANN with 99.99% accuracy provide the farthest and the closest predictions to the FEA response, respectively. Additionally, according to these data, the basic ANN presented in row 3 of 
Table 7
 (with eight neurons in the hidden layer) has been chosen as the most appropriate prediction model. The graph presented in 
Figure 11
 indicates the training procedure of the basic ANN. During 91 epochs, the basic ANN converged. The MSE trend of training data can be seen alongside this trend for validation and test data. In addition, this figure represents the regression analysis of the basic ANN model for training, validation, and test data. Additionally, the regression model for the whole data set can be seen in the bottom right corner of 
Figure 11
.
To optimize the parameter levels, a trained ANN with the specifications listed in the third row of 
Table 4
 is used as the cost function. The parameters of melt temperature, flow rate, holding pressure, and runner diameter are considered as the inputs of the GA, and the area of the blush defect is regarded as the only output. The allowable range for each of these parameters is specified in 
Table 3
. Additionally, for the GA, values of 300 were taken into account as the initial population, 300 as the maximum number of generations, 60% as the crossover rate, and 40% as the mutation rate. During the optimization process, the value of the cost function of the GA is constantly decreasing, which indicates the proper performance of the algorithm in finding the optimal values. At the end of the process, the algorithm had reached the optimal response after approximately 170 iterations, after which the response showed little change. The algorithm introduces the values of 197.1, 25.6, 84.9, and 6.4 as the optimal levels for the parameters of melt temperature, flow rate, holding pressure, and runner diameter, respectively. 
Figure 12
 shows the optimization process by the GA. Using experimental validation, it is possible to compare the results of the experimental tests, GA, and ANOVA. This comparison can be seen in 
Table 5
.
From the results obtained from 
Table 9
, it can be seen that, on account of optimization using GA, the amount of blush defect area has been reduced by 81.7%. Additionally, the optimization performed using the CCD method has reduced the defect area by 74.0%. 
Figure 13
 shows a visual comparison between the blush area, before and after optimization in the injection molding simulation, alongside the image of the defect in the bushing produced with the optimized parameters.
This study aimed at the determination of the effect of eight process parameters (flow rate, melt temperature, mold temperature, holding pressure, runner diameter, gate diameter, gate angle, and included angle) on the blush defect in PVC bushings produced by injection molding. Some prediction models have been created to estimate the area of the blush defect using ANOVA and ANNs. Among the prediction models used, the basic ANN method with a training accuracy of 99.99% has shown the best performance compared to other prediction methods for predicting the FEA results.
Results showed that flow rate, melt temperature, and runner diameter have a particularly strong effect on the blush defect and can be related to the viscosity of the molten material. The viscosity can increase with rapid cooling of the material, making the material’s shear stress exceed the allowable limit and, in turn, promoting blush.
Holding pressure has also affected the blush defect. With the increase in holding pressure, the blush defect decreases. Lower values of holding pressure can cause some semi-cooled material (which has a high viscosity) to enter the mold cavity. Reflowing the material in these high viscosity conditions can cause high amounts of shear rate, which is the underlying reason of blush defect occurrence. The parameters of mold temperature, gate diameter, gate angle, and included angle have a negligible effect on the result.
The key results of the research can be summarized as follows:
After optimization using the GA through the trained ANN as the cost function, values of 197.1 °C, 25.6 cm
3
/s, 84.9 MPa, and 6.4 mm were introduced as the optimal levels for the parameters of melt temperature, injection flow rate, holding pressure, and runner diameter, respectively.
After applying the optimized parameter levels by GA in a new FEA, the defect area was reduced by 81.7% compared to the pre-optimization defect area.
After optimization using the GA through the trained ANN as the cost function, values of 197.1 °C, 25.6 cm
3
/s, 84.9 MPa, and 6.4 mm were introduced as the optimal levels for the parameters of melt temperature, injection flow rate, holding pressure, and runner diameter, respectively.
After applying the optimized parameter levels by GA in a new FEA, the defect area was reduced by 81.7% compared to the pre-optimization defect area.
Methodology, A.M.A. and G.T.; Software, A.M.A.; Validation, A.M.A., R.S. and G.T.; Formal analysis, R.S.; Investigation, A.M.A.; Resources, G.A.; Writing—original draft, A.M.A.; Writing—review & editing, G.A., Y.S., M.C., J.H.H., M.K. and G.T.; Visualization, A.M.A.; Supervision, G.A. and G.T.; Project administration, G.A. All authors have read and agreed to the published version of the manuscript.
This research work was partially supported by the DIGIMAN4.0 project (“DIGItal MANufacturing Technologies for Zero-defect Industry 4.0 Production”, 
https://www.digiman4-0.mek.dtu.dk/
, accessed on 13 February 2023). DIGIMAN4.0 is a European Training Network supported by Horizon 2020, the EU Framework Programme for Research and Innovation (Project ID: 814225).
Not applicable.
Not applicable.
Not applicable.
This research work was undertaken in the context of DIGIMAN4.0 project (“DIGItal MANufacturing Technologies for Zero-defect Industry 4.0 Production”, 
http://www.digiman4-0.mek.dtu.dk/
). DIGIMAN4.0 is a European Training Network supported by Horizon 2020, the EU Framework Programme for Research and Innovation (Project ID: 814225). Yazd Poolica Co. (Yazd, Iran) is thanked for all their support during the experimental steps of the study.
The authors declare no conflict of interest.
ANN
Start of program
Train percent = tr
Test percent = ts
Initialize data
Separate input and output data
Normalize all data
Initialize a network structure
Set a random matrix for initial layer weights and biases
repeat
Use tr percent of data for training network
Use Equation (10) to Evaluate trained network with ts percent of data
Use Equations (11) and (12) to reset the weights and biases
Until termination criteria
Simulate the trained network with input data
Calculate and report the MSE
Start of program
Train percent = tr
Test percent = ts
Initialize data
Separate input and output data
Normalize all data
Initialize a network structure
Set a random matrix for initial layer weights and biases
repeat
Use tr percent of data for training network
Use Equation (10) to Evaluate trained network with ts percent of data
Use Equations (11) and (12) to reset the weights and biases
Until termination criteria
Simulate the trained network with input data
Calculate and report the MSE
For the ANN + PSO and ANN + GA algorithms, all steps are similar to the above pseudocode. Only the steps for optimizing layer weights (lines 8–12) are overwritten. In other words, the following pseudocodes are replaced with the iterative loop in the upper pseudocode.
ANN + PSO
Start of weight optimization
for each particle(each neural network)
Initialize particle position(Network weights) and velocity vectors
end for
Fitness = f(X)i
Personal best position = Xpb
Global best position = Xgb
repeat
for particlei i = 1 to Nparticles
Fitness = calculate the Fitness of particlei
if f(Xbp)i < f(Xbp)
Xbp = Xi, Pbest = Fitnessi
end if
if f(Xgb)i > f(Xgb)
Xgb = Xi, Gbest = Fitnessi
end if
update the velocity of the particle using Equations (18 and (19)
update the position of the particle using Equation (20)
end for
Until termination criteria
Start of weight optimization
for each particle(each neural network)
Initialize particle position(Network weights) and velocity vectors
end for
Fitness = f(X)i
Personal best position = Xpb
Global best position = Xgb
repeat
for particlei i = 1 to Nparticles
Fitness = calculate the Fitness of particlei
if f(Xbp)i < f(Xbp)
Xbp = Xi, Pbest = Fitnessi
end if
if f(Xgb)i > f(Xgb)
Xgb = Xi, Gbest = Fitnessi
end if
update the velocity of the particle using Equations (18 and (19)
update the position of the particle using Equation (20)
end for
Until termination criteria
ANN + GA
Start of weight optimization
N = number of network weights
G = Number of maximum generations
RecomPercent = r/100
CrossPercent = c/100
MutatPercent = 1 − RecomPercent − CrossPercent
Initialize genes randomly(initial Network weights)
Calculate fitness = f(X)i
Sort Chromosomes according to fitness
for i = 1 to G
Create new population(RecomPercent × N + CrossPercent × N + MutatPercent × N)
Calculate fitness
Sort Chromosomes according to fitness
end for
Start of weight optimization
N = number of network weights
G = Number of maximum generations
RecomPercent = r/100
CrossPercent = c/100
MutatPercent = 1 − RecomPercent − CrossPercent
Initialize genes randomly(initial Network weights)
Calculate fitness = f(X)i
Sort Chromosomes according to fitness
for i = 1 to G
Create new population(RecomPercent × N + CrossPercent × N + MutatPercent × N)
Calculate fitness
Sort Chromosomes according to fitness
end for
Disclaimer/Publisher’s Note:
 The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.